#!/usr/local/bin/python3

import argparse
import bibtexparser
import requests
import sys
from bibtexparser.bwriter import BibTexWriter


def doi2bib(doi):
    """
    Return a bibTeX string of metadata for a given DOI.
    Reference: https://gist.github.com/jrsmith3/5513926
    """

    url = "http://dx.doi.org/" + doi

    headers = {"accept": "application/x-bibtex"}
    r = requests.get(url, headers=headers)

    return r.text


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Fix BibTex File generated by ReadCube")
    parser.add_argument('bibtex_file', metavar='FILE', type=str, help='BibTex file generated by ReadCube for fixing')
    parser.add_argument('--out', dest='output_bibtex_file', metavar='OUTPUT', type=str, help='output file location', required=True)
    args = parser.parse_args()
    with open(args.bibtex_file) as bibtex_file:
        bib_database = bibtexparser.load(bibtex_file)
    print('%d BibTex entries loaded!' % len(bib_database.entries), file=sys.stderr)
    i = 1
    j = 1
    for bib_entry in bib_database.entries:
        if 'doi' in bib_entry:
            new_bibtex = doi2bib(bib_entry['doi'])
            new_bib_entry = bibtexparser.loads(new_bibtex).entries[0]
            new_bib_entry['ID'] = bib_entry['ID']
            bib_database.entries_dict[new_bib_entry['ID']] = new_bib_entry
            print('%d / %d BibTex entries fixed!' % (i, j), file=sys.stderr)
            i += 1
        j += 1

    bib_database.entries = [value for key, value in bib_database.entries_dict.items()]

    with open(args.output_bibtex_file, 'w') as bibtex_file:
        bibtex_file.write(BibTexWriter().write(bib_database))
